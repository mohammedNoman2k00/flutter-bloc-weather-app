name: CI/CD Pipeline

on:
  push:
    branches:
      - master
    tags:
      - "v*" # This will trigger the workflow when a tag like 'v1.0.0' is pushed
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.32.4"
          cache: false

      - name: Check Flutter & Dart version
        run: |
          flutter --version
          dart --version

      - name: Install Dependencies
        run: flutter pub get

      - name: Run Tests
        run: flutter test

      - name: Build APK
        run: flutter build apk --release

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }} # Use the tag name that triggered the workflow (You can write name here also)
          release_name: Release ${{ github.ref }} # Set the release name to the tag name
          draft: false # Immediately publish the release
          prerelease: false # This is not a pre-release (you set it true for pre-release)

      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # Use the upload URL from the previous step
          asset_path: build/app/outputs/flutter-apk/app-release.apk # Path to the APK file we built
          asset_name: app-release.apk # Name of the APK in the release
          asset_content_type: application/vnd.android.package-archive # Content type for APK files
